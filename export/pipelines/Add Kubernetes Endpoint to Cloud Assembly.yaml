---
project: Field Demo
kind: PIPELINE
name: Add Kubernetes Endpoint to Cloud Assembly
icon: organization,left, is-purple
enabled: true
concurrency: 10
input:
  clusterAddress: ''
  clusterCACertificate: ''
  clusterName: ''
  clusterUserPrivateKey: ''
  clusterUserPublicKey: ''
_inputMeta:
  clusterCACertificate:
    mandatory: true
    description: ''
  clusterName:
    mandatory: true
    description: ''
  clusterUserPrivateKey:
    mandatory: true
    description: ''
  clusterUserPublicKey:
    mandatory: true
    description: ''
  clusterAddress:
    mandatory: true
    description: ''
workspace:
  endpoint: smcg-sc2-docker-host - TLS
  image: sammcgeown/codestream-ci-tkg:0.0.10
  registry: ''
  path: ''
  autoCloneForTrigger: false
  limits:
    cpu: 1.0
    memory: 512
stageOrder:
- Main
stages:
  Main:
    taskOrder:
    - Authenticate
    - CreateEndpoint,Get Cluster Configuration
    tasks:
      Authenticate:
        type: Pipeline
        input:
          pipeline: vra-authenticateUser
          inputProperties:
            vraFQDN: ${var.vraFQDN}
            vraUserName: ${var.vraUsername}
            vraUserPassword: ${var.vraPassword}
      Get Cluster Configuration:
        type: Custom
        input:
          name: vra-GetClusterKubeconf
          version: '0.2'
          properties:
            vraFQDN: ${var.vraFQDN}
            variableName: ${input.clusterName}-k8s-config
            vraToken: ${Main.Authenticate.output.outputProperties.vraAccessToken}
      CreateEndpoint:
        type: Pipeline
        preCondition: true == false
        input:
          pipeline: vra-POST
          inputProperties:
            vraAccessToken: ${Main.Authenticate.output.outputProperties.vraAccessToken}
            vraRequestPayload: '{   "name": "${input.clusterName}",   "description": "Added from Code
              Stream",   "address": "${input.clusterAddress}",   "credentials": {     "publicKey": "${input.clusterUserPublicKey}",     "privateKey":
              "${input.clusterUserPrivateKey}",     "type": "PublicKey"   },   "clusterType": "EXTERNAL",   "caCertificate":
              "${input.clusterCACertificate}",   "shared": "true",   "global": "true" }'
            vraRequestUri: https://${var.vraFQDN}/cmx/api/resources/k8s/clusters/
